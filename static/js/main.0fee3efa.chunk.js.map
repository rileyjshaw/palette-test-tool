{"version":3,"sources":["constants.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS","ideal","W","K","R","G","B","C","M","Y","browser","light","dark","mixMethods","CMY","name","method","darken","multiply","RGB","lighten","screen","exclusion","difference","getNewSecondaryColors","primary1","palette","mixMethodIndices","mixMethod","secondaryColors","fullMixColor","primary1Rgb","tinycolor","toHslString","toRgb","map","primary2","secondary","primary2HslString","primary2Rgb","toHslArray","toHsl","reduce","acc","primary","h","s","l","toggle","x","defaultPalettes","colorOrder","split","fgColors","App","useState","darkMode","setDarkMode","colorString","URLSearchParams","window","location","search","get","triplets","triplet","length","every","forEach","colorSpace","i","offset","color","j","palettes","setPalettes","activeColor","setActiveColor","setMixMethodIndices","showSecondaryColors","setShowSecondaryColors","colors","useMemo","filter","_","colorsQueryString","flatMap","join","hueRef","useRef","useEffect","oldPalettes","newPalettes","newPalette","key","value","className","style","tabIndex","onClick","indices","newIndex","history","replaceState","console","log","JSON","stringify","outerAcc","Object","entries","values","r","g","b","replace","alert","href","target","rel","type","max","ref","onChange","e","newColor","isPrimary","hslString","shoulders","leftShoulderHueGap","rightShoulderHueGap","background","setTimeout","current","focus","disabled","Math","round","getBrightness","toHexString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fee3efa.chunk.js","sourcesContent":["const COLORS = {\n\tideal: {\n\t\tW: [40, 23, 97],\n\t\tK: [80, 16, 4],\n\t\tR: [3, 100, 61],\n\t\tG: [127, 63, 49],\n\t\tB: [208, 100, 43],\n\t\tC: [187, 100, 42],\n\t\tM: [340, 82, 52],\n\t\tY: [52, 100, 50],\n\t},\n\tbrowser: {\n\t\tW: [0, 0, 100],\n\t\tK: [0, 0, 0],\n\t\tR: [0, 100, 50],\n\t\tY: [60, 100, 50],\n\t\tG: [120, 100, 50],\n\t\tC: [180, 100, 50],\n\t\tB: [240, 100, 50],\n\t\tM: [300, 100, 50],\n\t},\n};\n\nCOLORS.light = COLORS.dark = COLORS.browser;\n\nexport {COLORS};\n","import './App.css';\nimport React, {useState, useRef, useEffect, useMemo} from 'react';\nimport {\n\tmultiply,\n\tdarken,\n\tscreen,\n\tlighten, // RGB frontrunner.\n\texclusion,\n\tdifference,\n} from 'color-blend';\nimport {COLORS} from './constants';\nimport tinycolor from 'tinycolor2';\n\nconst mixMethods = {\n\tCMY: [\n\t\t{name: 'darken', method: darken},\n\t\t{name: 'multiply', method: multiply},\n\t],\n\tRGB: [\n\t\t{name: 'lighten', method: lighten},\n\t\t{name: 'screen', method: screen},\n\t\t{name: 'exclusion', method: exclusion},\n\t\t{name: 'difference', method: difference},\n\t],\n};\n\nfunction getShoulders(primary) {\n\treturn {\n\t\tC: ['G', 'B'],\n\t\tM: ['B', 'R'],\n\t\tY: ['R', 'G'],\n\t\tR: ['M', 'Y'],\n\t\tG: ['Y', 'C'],\n\t\tB: ['C', 'M'],\n\t}[primary];\n}\n\nfunction getNewSecondaryColors(primary1, palette, mixMethodIndices) {\n\tconst [mixMethod, secondaryColors, fullMixColor] = {\n\t\tC: [\n\t\t\tmixMethods.CMY[mixMethodIndices.CMY].method,\n\t\t\t[\n\t\t\t\t['M', 'B'],\n\t\t\t\t['Y', 'G'],\n\t\t\t],\n\t\t\t[['M', 'Y'], 'K'],\n\t\t],\n\t\tM: [\n\t\t\tmixMethods.CMY[mixMethodIndices.CMY].method,\n\t\t\t[\n\t\t\t\t['C', 'B'],\n\t\t\t\t['Y', 'R'],\n\t\t\t],\n\t\t\t[['C', 'Y'], 'K'],\n\t\t],\n\t\tY: [\n\t\t\tmixMethods.CMY[mixMethodIndices.CMY].method,\n\t\t\t[\n\t\t\t\t['C', 'G'],\n\t\t\t\t['M', 'R'],\n\t\t\t],\n\t\t\t[['C', 'M'], 'K'],\n\t\t],\n\t\tR: [\n\t\t\tmixMethods.RGB[mixMethodIndices.RGB].method,\n\t\t\t[\n\t\t\t\t['G', 'Y'],\n\t\t\t\t['B', 'M'],\n\t\t\t],\n\t\t\t[['G', 'B'], 'W'],\n\t\t],\n\t\tG: [\n\t\t\tmixMethods.RGB[mixMethodIndices.RGB].method,\n\t\t\t[\n\t\t\t\t['R', 'Y'],\n\t\t\t\t['B', 'C'],\n\t\t\t],\n\t\t\t[['R', 'B'], 'W'],\n\t\t],\n\t\tB: [\n\t\t\tmixMethods.RGB[mixMethodIndices.RGB].method,\n\t\t\t[\n\t\t\t\t['R', 'M'],\n\t\t\t\t['G', 'C'],\n\t\t\t],\n\t\t\t[['R', 'G'], 'W'],\n\t\t],\n\t}[primary1];\n\tconst primary1Rgb = tinycolor(toHslString(palette[primary1])).toRgb();\n\treturn [\n\t\t...secondaryColors.map(([primary2, secondary]) => {\n\t\t\tconst primary2HslString = toHslString(palette[primary2]);\n\t\t\tconst primary2Rgb = tinycolor(primary2HslString).toRgb();\n\t\t\tconst newValue = toHslArray(tinycolor(mixMethod(primary1Rgb, primary2Rgb)).toHsl());\n\t\t\treturn [secondary, newValue];\n\t\t}),\n\t\t[\n\t\t\tfullMixColor[1],\n\t\t\ttoHslArray(\n\t\t\t\ttinycolor(\n\t\t\t\t\tfullMixColor[0].reduce(\n\t\t\t\t\t\t(acc, primary) => mixMethod(acc, tinycolor(toHslString(palette[primary])).toRgb()),\n\t\t\t\t\t\tprimary1Rgb\n\t\t\t\t\t)\n\t\t\t\t).toHsl()\n\t\t\t),\n\t\t],\n\t];\n}\nconst toHslString = ([h, s, l]) => `hsl(${h},${s}%,${l}%)`;\nconst toHslArray = ({h, s, l}) => [h, s * 100, l * 100];\nconst toggle = x => !x;\n\nconst defaultPalettes = {\n\tCMY: COLORS.light,\n\tRGB: COLORS.dark,\n};\nconst colorOrder = 'RYGCBM'.split('');\nconst fgColors = {CMY: 'K', RGB: 'W'};\n\nfunction App() {\n\tconst [darkMode, setDarkMode] = useState(false);\n\tconst [palettes, setPalettes] = useState(() => {\n\t\tconst urlParams = new URLSearchParams(window.location.search);\n\t\tconst colorString = urlParams.get('colors');\n\t\tif (!colorString) return defaultPalettes;\n\t\tconst triplets = colorString.split(';').map(triplet => triplet.split(','));\n\t\tif (triplets.length !== 14 || !triplets.every(triplet => triplet.length === 3)) return defaultPalettes;\n\t\tconst acc = {};\n\t\t['CMY', 'RGB'].forEach((colorSpace, i) => {\n\t\t\tacc[colorSpace] = {};\n\n\t\t\tconst offset = 7 * i;\n\t\t\tcolorOrder.forEach((color, j) => {\n\t\t\t\tacc[colorSpace][color] = triplets[j + offset];\n\t\t\t});\n\t\t\tacc[colorSpace][fgColors[colorSpace]] = triplets[6 + offset];\n\t\t});\n\t\treturn acc;\n\t});\n\tconst [activeColor, setActiveColor] = useState(false);\n\tconst [mixMethodIndices, setMixMethodIndices] = useState({CMY: 0, RGB: 0});\n\tconst [showSecondaryColors, setShowSecondaryColors] = useState(true);\n\tconst colors = useMemo(\n\t\t() => (showSecondaryColors ? colorOrder : colorOrder.filter((_, i) => !(i % 2) === darkMode)),\n\t\t[showSecondaryColors, darkMode]\n\t);\n\tconst colorsQueryString = useMemo(\n\t\t() =>\n\t\t\t`?colors=${['CMY', 'RGB']\n\t\t\t\t.flatMap(colorSpace =>\n\t\t\t\t\t[...colorOrder, fgColors[colorSpace]].map(color => palettes[colorSpace][color].join())\n\t\t\t\t)\n\t\t\t\t.join(';')}`,\n\t\t[palettes]\n\t);\n\n\tconst hueRef = useRef(null);\n\tconst colorSpace = darkMode ? 'RGB' : 'CMY';\n\tconst palette = palettes[colorSpace];\n\n\tuseEffect(() => {\n\t\tsetPalettes(oldPalettes => {\n\t\t\tconst newPalettes = {...oldPalettes};\n\t\t\tconst newPalette = {...newPalettes[colorSpace]};\n\t\t\tconst secondaryColors = [0, 1, 2].flatMap(i =>\n\t\t\t\tgetNewSecondaryColors(colorSpace[i], newPalette, mixMethodIndices)\n\t\t\t);\n\t\t\tsecondaryColors.forEach(([key, value]) => {\n\t\t\t\tnewPalette[key] = value;\n\t\t\t});\n\t\t\tnewPalettes[colorSpace] = newPalette;\n\t\t\treturn newPalettes;\n\t\t});\n\t}, [colorSpace, mixMethodIndices]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`palette-test-tool${darkMode ? ' dark' : ''}`}\n\t\t\tstyle={{color: toHslString(palette[darkMode ? 'W' : 'K'])}}\n\t\t>\n\t\t\t<header>\n\t\t\t\t<h1 className=\"title\">Palette test tool</h1>\n\t\t\t\t<div className=\"subtitle\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetShowSecondaryColors(toggle);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showSecondaryColors ? 'Hide' : 'Show'} secondary colors\n\t\t\t\t\t</button>\n\t\t\t\t\t<div />\n\t\t\t\t\t<button\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetMixMethodIndices(indices => {\n\t\t\t\t\t\t\t\tconst key = darkMode ? 'RGB' : 'CMY';\n\t\t\t\t\t\t\t\tconst newIndex = (indices[key] + 1) % mixMethods[key].length;\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t...indices,\n\t\t\t\t\t\t\t\t\t[key]: newIndex,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tMix mode: {mixMethods[colorSpace][mixMethodIndices[colorSpace]].name}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div />\n\t\t\t\t\t<button tabIndex=\"-1\" onClick={() => setDarkMode(toggle)}>\n\t\t\t\t\t\tDark mode: {darkMode ? 'on' : 'off'}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div />\n\t\t\t\t\t<button\n\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\twindow.history.replaceState(null, null, colorsQueryString);\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\tJSON.stringify(\n\t\t\t\t\t\t\t\t\t['CMY', 'RGB'].reduce((outerAcc, colorSpace) => {\n\t\t\t\t\t\t\t\t\t\touterAcc[colorSpace] = Object.entries(palettes[colorSpace]).reduce(\n\t\t\t\t\t\t\t\t\t\t\t(acc, [color, values]) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst {r, g, b} = tinycolor(toHslString(values)).toRgb();\n\t\t\t\t\t\t\t\t\t\t\t\tacc[color] = [r, g, b];\n\t\t\t\t\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\treturn outerAcc;\n\t\t\t\t\t\t\t\t\t}, {}),\n\t\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\t\t'\\t'\n\t\t\t\t\t\t\t\t).replace(/\"([^\"]+)\":/g, '$1:')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\talert('Check the console for RGB triplets.');\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tExport\n\t\t\t\t\t</button>\n\t\t\t\t\t<div />\n\t\t\t\t\t<a href={`https://rileyjshaw.com${colorsQueryString}`} target=\"_blank\" rel=\"noreferrer\">\n\t\t\t\t\t\trileyjshaw.com\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<main>\n\t\t\t\t<div className=\"controls\">\n\t\t\t\t\t{activeColor ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{palette[activeColor].map((value, i) => (\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\tmax={i ? 100 : 360}\n\t\t\t\t\t\t\t\t\tref={i ? null : hueRef}\n\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\tsetPalettes(oldPalettes => {\n\t\t\t\t\t\t\t\t\t\t\tconst newPalettes = {...oldPalettes};\n\t\t\t\t\t\t\t\t\t\t\tconst newPalette = {...newPalettes[colorSpace]};\n\t\t\t\t\t\t\t\t\t\t\tconst newColor = [...newPalette[activeColor]];\n\t\t\t\t\t\t\t\t\t\t\tnewColor[i] = e.target.value;\n\t\t\t\t\t\t\t\t\t\t\tnewPalette[activeColor] = newColor;\n\t\t\t\t\t\t\t\t\t\t\tconst secondaryColors = getNewSecondaryColors(\n\t\t\t\t\t\t\t\t\t\t\t\tactiveColor,\n\t\t\t\t\t\t\t\t\t\t\t\tnewPalette,\n\t\t\t\t\t\t\t\t\t\t\t\tmixMethodIndices\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tsecondaryColors.forEach(([key, value]) => {\n\t\t\t\t\t\t\t\t\t\t\t\tnewPalette[key] = value;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tnewPalettes[colorSpace] = newPalette;\n\t\t\t\t\t\t\t\t\t\t\treturn newPalettes;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p className=\"info\">Click a primary color ({darkMode ? 'RGB' : 'CMY'}) to begin editing.</p>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<ul className=\"color-list new\">\n\t\t\t\t\t{colors.map((key, i) => {\n\t\t\t\t\t\tconst isPrimary = !(showSecondaryColors && darkMode === !!(i % 2));\n\t\t\t\t\t\tconst hslString = toHslString(palette[key]);\n\t\t\t\t\t\tconst shoulders = getShoulders(key);\n\t\t\t\t\t\tlet leftShoulderHueGap = palette[key][0] - palette[shoulders[0]][0];\n\t\t\t\t\t\twhile (leftShoulderHueGap < -180) leftShoulderHueGap += 360;\n\t\t\t\t\t\tlet rightShoulderHueGap = palette[shoulders[1]][0] - palette[key][0];\n\t\t\t\t\t\twhile (rightShoulderHueGap < -180) rightShoulderHueGap += 360;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tclassName={`color-item${key === activeColor ? ' active' : ''}${\n\t\t\t\t\t\t\t\t\tisPrimary ? ' primary' : ''\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\tstyle={{background: hslString}}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tif (!isPrimary) return;\n\t\t\t\t\t\t\t\t\tsetActiveColor(key);\n\t\t\t\t\t\t\t\t\tsetPalettes(oldPalettes => {\n\t\t\t\t\t\t\t\t\t\tconst newPalettes = {...oldPalettes};\n\t\t\t\t\t\t\t\t\t\tconst newPalette = {...newPalettes[colorSpace]};\n\t\t\t\t\t\t\t\t\t\tconst secondaryColors = getNewSecondaryColors(\n\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\tnewPalette,\n\t\t\t\t\t\t\t\t\t\t\tmixMethodIndices\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tsecondaryColors.forEach(([key, value]) => {\n\t\t\t\t\t\t\t\t\t\t\tnewPalette[key] = value;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tnewPalettes[colorSpace] = newPalette;\n\t\t\t\t\t\t\t\t\t\treturn newPalettes;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsetTimeout(() => hueRef.current && hueRef.current.focus(), 0);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"label\"\n\t\t\t\t\t\t\t\t\tdisabled={!isPrimary}\n\t\t\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetActiveColor(key);\n\t\t\t\t\t\t\t\t\t\tsetPalettes(oldPalettes => {\n\t\t\t\t\t\t\t\t\t\t\tconst newPalettes = {...oldPalettes};\n\t\t\t\t\t\t\t\t\t\t\tconst newPalette = {...newPalettes[colorSpace]};\n\t\t\t\t\t\t\t\t\t\t\tnewPalette[key] = COLORS.browser[key];\n\t\t\t\t\t\t\t\t\t\t\tconst secondaryColors = getNewSecondaryColors(\n\t\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\t\tnewPalette,\n\t\t\t\t\t\t\t\t\t\t\t\tmixMethodIndices\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tsecondaryColors.forEach(([key, value]) => {\n\t\t\t\t\t\t\t\t\t\t\t\tnewPalette[key] = value;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tnewPalettes[colorSpace] = newPalette;\n\t\t\t\t\t\t\t\t\t\t\treturn newPalettes;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{key}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"hue\">\n\t\t\t\t\t\t\t\t\t<span className=\"shoulder\">{Math.round(leftShoulderHueGap)}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"main-hue\">{Math.round(palette[key][0])}</span>\n\t\t\t\t\t\t\t\t\t<span className=\"shoulder\">{Math.round(rightShoulderHueGap)}</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"saturation\">{Math.round(palette[key][1])}</span>\n\t\t\t\t\t\t\t\t<span className=\"lightness\">{Math.round(palette[key][2])}</span>\n\t\t\t\t\t\t\t\t<span className=\"brightness\">{tinycolor(hslString).getBrightness()}</span>\n\t\t\t\t\t\t\t\t<span className=\"hex\">{tinycolor(hslString).toHexString()}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"color-list old\">\n\t\t\t\t\t{colors.map((key, i) => {\n\t\t\t\t\t\tconst isPrimary = !(showSecondaryColors && darkMode === !!(i % 2));\n\t\t\t\t\t\tconst hslString = toHslString(COLORS.ideal[key]);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tclassName={`color-item${isPrimary ? ' primary' : ''}`}\n\t\t\t\t\t\t\t\tstyle={{background: hslString}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"hue-saturation-lightness\"\n\t\t\t\t\t\t\t\t\tdisabled={!isPrimary}\n\t\t\t\t\t\t\t\t\ttabIndex=\"-1\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetActiveColor(key);\n\t\t\t\t\t\t\t\t\t\tsetPalettes(oldPalettes => {\n\t\t\t\t\t\t\t\t\t\t\tconst newPalettes = {...oldPalettes};\n\t\t\t\t\t\t\t\t\t\t\tconst newPalette = {...newPalettes[colorSpace]};\n\t\t\t\t\t\t\t\t\t\t\tnewPalette[key] = COLORS.ideal[key];\n\t\t\t\t\t\t\t\t\t\t\tconst secondaryColors = getNewSecondaryColors(\n\t\t\t\t\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\t\t\t\t\tnewPalette,\n\t\t\t\t\t\t\t\t\t\t\t\tmixMethodIndices\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\tsecondaryColors.forEach(([key, value]) => {\n\t\t\t\t\t\t\t\t\t\t\t\tnewPalette[key] = value;\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\tnewPalettes[colorSpace] = newPalette;\n\t\t\t\t\t\t\t\t\t\t\treturn newPalettes;\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{COLORS.ideal[key][0]}, {COLORS.ideal[key][1]}, {COLORS.ideal[key][2]}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<span className=\"brightness\">{tinycolor(hslString).getBrightness()}</span>\n\t\t\t\t\t\t\t\t<span className=\"hex\">{tinycolor(hslString).toHexString()}</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t\t<ul className=\"color-list bw\">\n\t\t\t\t\t{darkMode ? (\n\t\t\t\t\t\t<li className=\"color-item\" style={{background: toHslString(palette.W)}}>\n\t\t\t\t\t\t\t<span className=\"hex\">{tinycolor(toHslString(palette.W)).toHexString()}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<li className=\"color-item\" style={{background: toHslString(palette.K)}}>\n\t\t\t\t\t\t\t<span className=\"hex\">{tinycolor(toHslString(palette.K)).toHexString()}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)}\n\t\t\t\t</ul>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}